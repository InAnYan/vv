from abc import ABC


class Question(ABC):
    orig_str: str

    def __init__(self, txt: str):
        self.orig_str = txt

    def get_orig_str(self):
        return self.orig_str


# Якщо неохідно вибрати два поняття:
#
#   Вища освіта всім чи її мають здобувати лише кращі?
#   Яка праця більше варта поваги – фізична чи інтелектуальна?
#   Як краще досягати успіху – самотужки чи в колективі?
#   Ким краще бути в сучасному світі – романтиком чи раціоналістом?
#   Що ж важче: будувати надхмарні споруди чи жити в них?
#
# Можна побачити, що ключевим словом для цього типу є тире, двокрапка та "чи".
# З "чи" є проблема: воно занадто часто зустрічається у тезах
#
# В такій тезі треба розпарсити вибори.
# В результаті обрати один вибір.
#
class ChoiceQuestion(Question):
    choices: [str]
    about: str

    def __init__(self, txt: str, about: str, choices: [str]):
        super().__init__(txt)
        self.choices = choices
        self.about = about

    def get_choices(self):
        return self.choices

    def get_about(self):
        return self.about


# Треба відповісти, може щось чи щось не може.
# Треба пошукати більше тез, можливо це занадто абстрактний тип.
#
#   Чи вища освіта може замінити практичний досвід?
#   Чи має право наука абстрагуватися від питань моралі?
#   Чи можливе ідеальне суспільство без ідеальної сім’ї?
#   Чи можна подолати проблему батьків / дітей (старшого / молодшого покоління)?
#   Чи можлива в суспільному житті гармонія?
#   * Чи не призведе розвиток науки до деградації духовності людини?
#
# Знову ключове слово - "чи". Поряд ідуть слова: "може" "має" "можливе" "можна" "треба".
#
# В такій тезі треба вибрати головне поняття, або дію, навколо якої іде мова.
# В результаті треба відповісти: так чи ні, можливо чи ні
#
class CanOrNotQuestion(Question):
    term: str

    def __init__(self, txt: str, term: str):
        super().__init__(txt)
        self.term = term

    def get_term(self):
        return self.term


# Якщо треба викласти свої методи розв'язання проблеми, критерії:
#
#   За якими критеріями краще обирати професію?
#   Які чинники впливають на формування людини як особистості?
#   Що руйнує сім’ю?
#   Що робить групу людей нацією?
#   У чому цінність мистецтва?
#   У чому користь технологій?
#
# Тут багато ключових слів: "за якими" "які чинники" "чинники" "що" "у чому".
#
# У тезі треба виділити головне поняття.
# В результаті треба щось перелічити. Добре ще пов'язати приклади з аргументами.
# Поки що не знаю, що з цього повинно вийти.
#
class WhichQuestion(Question):
    about: str

    def __init__(self, txt: str, about: str):
        super().__init__(txt)
        self.about = about

    def get_about(self):
        return self.about


# Складний тип, схожий на WHICH, бо теж треба самому придумати якісь причини чогось.
#
#   Чому занепадають цивілізації?
#   Чому важливо знати уроки історії?
#
# Ключове слово: "чому" на початку речення.
#
# Взагалі, тут не потрібно нічого парсити, можна зразу це гуглити.
# В результати треба перелічити причини. Поки що не знаю, що з цього повинно вийти.
#
class WhyQuestion(Question):
    what: str

    def __init__(self, txt: str, what: str):
        super().__init__(txt)
        self.what = what

    def get_what(self):
        return self.what


# Питання на кількість. Цікавий тип, але чогось не можу знайти прикладів.
#
#   На скільки людині варто дослухатися до думки оточення про неї?
#
# Треба відповісти: "повністю",
#
# Можливо тут теж парсити нічого не потрібно.
# В результаті повинно бути: "повністю" "частково" "ніскільки".
#
class HowMuchQuestion(Question):
    what: str

    def __init__(self, txt: str, what: str):
        super().__init__(txt)
        self.what = what

    def get_what(self):
        return self.what
